{% comment %} Options {% endcomment %}
{% assign active_product = product.selected_or_first_available_variant %}
{% assign active_product_id = product.selected_or_first_available_variant.id %}
{% assign product_variants = product.variants %}
{% assign product_variants_size = product.variants | size %}
{% assign product_options = product.options_with_values %}
{% assign product_available = active_product.available %}
{% assign product_qty = active_product.inventory_quantity %}
{% assign product_options_size = product_options | size %}

<form action="/cart/add" method="post" enctype="multipart/form-data" class="product_form"
  id="add-to-cart-{{ product.handle }}-{{ collection.handle }}-{{ section.id }}">

  {% comment %} Show variant options as separate select boxes {% endcomment %}
  {% if product_variants_size > 1 %}
  <div class="product_options{% if product_options_size == 1 %} product_options-single{% endif %}"> 
    {%- for product_option in product_options -%}
      {%- assign option_name = product_option.name -%}
      {%- assign option_values = product_option.values -%}
      {%- assign selected_value = product_option.selected_value -%}

      <div class="product_option" option-name="{{ option_name }}">
        <label class="label" for="option-{{ option_name | downcase }}">{{ option_name }}</label>
        <div class="select-styled">
          <select name="option-{{ option_name | downcase }}" class="option_selector option_selector-toggable option_selector-{{ option_name }}">
            {%- for value in option_values -%}
              <option value="{{ value | escape | downcase }}" {%- if selected_value == value -%}selected="selected"{%- endif -%}>{{ value }}</option>
            {%- endfor -%}
          </select>
        </div>
      </div>

    {%- endfor -%}
  </div>
  {% endif %}

  {% if product_variants_size > 1 %}
    {% comment %} Hidden form to handle add to cart {% endcomment %}
    <select name="id" id="ProductSelect">
      {% assign hidden_product_variants = product.variants %}
      {% for hidden_variant in hidden_product_variants %}
        {% assign hidden_variant_id = hidden_variant.id %}
        {% assign hidden_variant_title = hidden_variant.title %}
        {% assign hidden_variant_title_split = hidden_variant_title | split: ' / ' %}
        <option 
          class="product_select_label"
          data-option="{% for title in hidden_variant_title_split %}{{ title | replace: ' ', '-' | downcase }}{% unless forloop.last %}-{% endunless %}{% endfor %}"
          value="{{ hidden_variant_id }}" {% if hidden_variant_id == active_product_id %}
          selected="selected" {% endif %}>
            {{- hidden_variant_title -}}
        </option>
      {% endfor %}
    </select>
    {% if product.available and product.variants.size > 1 %}
{% render 'swatch' for product.options as swatch %}
{% endif %}
  {% else %}
    <input type="hidden" id="id" name="id" value="{{ active_product_id }}" />
  {% endif %}
    <button type="submit" class="button button-grey">Personalise</button>
  {% if product_available %}
    <button type="submit" name="add" id="cta-add-to-cart" class="js-add-to-cart button button-black">{{ 'products.product.add_to_cart' | t }}</button>
  {% else %}
    <input id="cta-add-to-cart" class="button button-black" type="submit" value="{{ 'products.product.sold_out' | t }}" disabled />
  {% endif %}

</form>

<script>
  // Toggle between variants
  var variants = document.querySelectorAll('.product_select_label') // Hidden select list with id
  var productOptions = document.querySelectorAll('.option_selector-toggable');
  var changingVariantText = 'Changing variant...';
  var addToCartButton = document.getElementById('cta-add-to-cart');
  // Listen to product options changes
  productOptions.forEach(function(option) {
    option.addEventListener('change', function(event) {
      // BEGIN SWATCHES
if (variant) {
  var form = jQuery('#' + selector.domIdPrefix).closest('form');
  for (var i=0,length=variant.options.length; i<length; i++) {
    var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] +'"]');
    if (radioButton.size()) {
      radioButton.get(0).checked = true;
    }
  }
}
// END SWATCHES
      event.preventDefault();
      let selectedVariantId = Array.from(productOptions).map(function(productOption) {
        return productOption.value.replace(/ /g, '-').toLowerCase()
      }).join('-')
      Array.prototype.slice.call(variants).forEach(function(variant) {
        let id = variant.getAttribute('data-option');
        let value = variant.value;
        addToCartButton.value = changingVariantText;
        addToCartButton.disabled = true;
        if (id === selectedVariantId) {
          setTimeout(function() {
          	window.location.search = '?variant=' + value;
          }, 500);
        }
      });
    })
  })
</script>
<style>
/* 
   Swatches Styles
*/

{% assign width = '50px' %}
{% assign height = '35px' %}
.swatch { 
  margin: 1.5em 0; 
  height: 50px;
}
/* Label */
.swatch .header-swatch {
  margin: 0.5em 0;
}
/* Hide radio buttons.*/
.swatch input { 
  display:none;
}
.swatch label {
  /* Rounded corners */
  border-radius: 100%;
  /* To give width and height */
  float:left;
  /* Color swatches contain no text so they need to have a width. */
  min-width: 20px !important; 
  height: 20px !important;
  /* No extra spacing between them */
  margin:0;
  /* The border when the button is not selected */
  /* Background color */
  background-color:#ddd;
  /* Styling text */
  font-size:13px;
  text-align:center;
  line-height:{{ height }};
  white-space:nowrap;
  text-transform:uppercase;
}
.swatch-element label { padding:0 10px; }
.color.swatch-element label { padding:0; }
/* Styling selected swatch */
/* Slightly raised */
.swatch input:checked + label {
  -webkit-box-shadow:0px 1px 2px rgba(0,0,0,0.8);
  -moz-box-shadow:0px 1px 2px rgba(0,0,0,0.8);
  box-shadow:0px 1px 2px rgba(0,0,0,0.8);
  border-color:transparent;
} 
.swatch .swatch-element {
  float:left;
  -webkit-transform:translateZ(0); /* webkit flicker fix */
  -webkit-font-smoothing:antialiased; /* webkit text rendering fix */
  /* Spacing between buttons */
  margin:0px 10px 10px 0;
  /* To position the sold out graphic and tooltip */
  position:relative;
}
/* Image with the cross in it */
.crossed-out { position:absolute; width:100%; height:100%; left:0; top:0; }
.swatch .swatch-element .crossed-out { display:none; }
.swatch .swatch-element.soldout .crossed-out { display:block; }
.swatch .swatch-element.soldout label {
  filter: alpha(opacity=60); /* internet explorer */
  -khtml-opacity: 0.6;      /* khtml, old safari */
  -moz-opacity: 0.6;       /* mozilla, netscape */
  opacity: 0.6;           /* fx, safari, opera */
}
/* Tooltips */
.swatch .tooltip {
  text-align:center;
  background:gray;
  color:#fff;
  bottom:100%;
  padding: 10px;
  display:block;
  position:absolute;
  width:100px;
  left:{{ width | remove: 'px' | to_number | divided_by: 2 | minus: 50 | plus: 2 }}px;
  margin-bottom:15px;
  /* Make it invisible by default */
  filter:alpha(opacity=0);
  -khtml-opacity: 0;
  -moz-opacity: 0;
  opacity:0;
  visibility:hidden;
  /* Animations */
  -webkit-transform: translateY(10px);
     -moz-transform: translateY(10px);
      -ms-transform: translateY(10px);
       -o-transform: translateY(10px);
          transform: translateY(10px);
  -webkit-transition: all .25s ease-out;
     -moz-transition: all .25s ease-out;
      -ms-transition: all .25s ease-out;
       -o-transition: all .25s ease-out;
          transition: all .25s ease-out;
  -webkit-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
     -moz-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
      -ms-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
       -o-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
          box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
  z-index: 10000;
  -moz-box-sizing:border-box; 
  -webkit-box-sizing:border-box; 
  box-sizing:border-box;
}
.swatch .tooltip:before {
  bottom:-20px;
  content:" ";
  display:block;
  height:20px;
  left:0;
  position:absolute;
  width:100%;
}
/* CSS triangle */
.swatch .tooltip:after {
  border-left:solid transparent 10px;
  border-right:solid transparent 10px;
  border-top:solid gray 10px;
  bottom:-10px;
  content:" ";
  height:0;
  left:50%;
  margin-left:-13px;
  position:absolute;
  width:0;
}
.swatch .swatch-element:hover .tooltip {
  filter:alpha(opacity=100);
  -khtml-opacity:1;
  -moz-opacity:1;
  opacity:1;
  visibility:visible;
  -webkit-transform:translateY(0px);
     -moz-transform:translateY(0px);
      -ms-transform:translateY(0px);
       -o-transform:translateY(0px);
          transform:translateY(0px);
}
.swatch.error {
  background-color:#E8D2D2!important;
  color:#333!important;
  padding:1em;
  border-radius:5px;
}
.swatch.error p {
  margin:0.7em 0;
}
.swatch.error p:first-child {
  margin-top:0;
}
.swatch.error p:last-child {
  margin-bottom:0;
}
.swatch.error code {
  font-family:monospace;
}
</style>