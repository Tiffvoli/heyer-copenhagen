<section class="page section">
  <div class="container">
    <header class="page_header">
      <h1 class="page_title">{{ 'customer.addresses.title' | t }}</h1>
      <a class="link link-arrow" href="{{ routes.account_url }}">{{ 'customer.account.return' | t }}</a>
    </header>
  </div>
</section>

{% comment %} Addresses {% endcomment %}
<section class="addresses section">
  <div class="container">

    <div class="addresses_list">

      {% comment %} Add new address (Inline) {% endcomment %}
       <div>
        <h3 style="margin-bottom: 60px">{{ 'customer.addresses.add_new' | t }}</h3>

        {% form 'customer_address', customer.new_address, class: 'form form-small' %}

          <div class="formGroups">
            <div class="formGroup formGroup-half">
              <label class="label" for="AddressFirstNameNew">{{ 'customer.addresses.first_name' | t }}</label>
              <input class="input input-dark" type="text" id="AddressFirstNameNew" name="address[first_name]" value="{{ form.first_name }}" autocomplete="given-name" required>
            </div>

            <div class="formGroup formGroup-half">
              <label class="label" for="AddressLastNameNew">{{ 'customer.addresses.last_name' | t }}</label>
              <input class="input input-dark" type="text" id="AddressLastNameNew" name="address[last_name]" value="{{ form.last_name }}" autocomplete="family-name" required>
            </div>
          </div>

          <div class="formGroup">
            <label class="label" for="AddressCompanyNew">{{ 'customer.addresses.company' | t }}</label>
            <input class="input input-dark" type="text" id="AddressCompanyNew" name="address[company]" value="{{ form.company }}" autocomplete="organization">
          </div>

          <div class="formGroup">
            <label class="label" for="AddressAddress1New">{{ 'customer.addresses.address1' | t }}</label>
            <input class="input input-dark" type="text" id="AddressAddress1New" name="address[address1]" value="{{ form.address1 }}" autocomplete="street-address address-line1" required>
          </div>

          <div class="formGroup">
            <label class="label" for="AddressAddress2New">{{ 'customer.addresses.address2' | t }}</label>
            <input class="input input-dark" type="text" id="AddressAddress2New" name="address[address2]" value="{{ form.address2 }}" autocomplete="street-address address-line2">
          </div>
          
          <div class="formGroups">
            <div class="formGroup formGroup-half">
              <label class="label" for="AddressCityNew">{{ 'customer.addresses.city' | t }}</label>
              <input class="input input-dark" type="text" id="AddressCityNew" name="address[city]" value="{{ form.city }}" autocomplete="address-level2" required>
            </div>

            <div class="formGroup formGroup-half">
              <label class="label" for="AddressCountryNew" >{{ 'customer.addresses.country' | t }}</label>
              <div class="select-styled" style="height: 40px; margin-top: 10px; border: 1px solid #cccccc; min-width: auto">
                <select id="AddressCountryNew" name="address[country]" data-default="{{ form.country }}" autocomplete="country" required>{{ all_country_option_tags }}</select>
              </div>
            </div>
          </div>

          <div class="formGroup" id="AddressProvinceContainerNew" style="display:none">
            <label class="label" for="AddressProvinceNew">{{ 'customer.addresses.province' | t }}</label>
            <div class="select-styled">
              <select id="AddressProvinceNew" name="address[province]" data-default="{{ form.province }}" autocomplete="address-level1"></select>
            </div>
          </div>

          <div class="formGroup">
            <label class="label" for="AddressZipNew">{{ 'customer.addresses.zip' | t }}</label>
            <input class="input input-dark" type="text" id="AddressZipNew" name="address[zip]" value="{{ form.zip }}" autocapitalize="characters" autocomplete="postal-code" required>
          </div>

          <div class="formGroup">
            <label class="label" for="AddressPhoneNew">{{ 'customer.addresses.phone' | t }}</label>
            <input class="input input-dark" type="tel" id="AddressPhoneNew" name="address[phone]" value="{{ form.phone }}" autocomplete="phone">
          </div>

          <div class="formGroup">
            <div class="checkbox">
                <input id="address_default_address_new" name="address[default]" type="checkbox" value="1" checked>
                <label class="checkbox_text" for="address_default_address_new">{{ 'customer.addresses.set_default' | t }}</p>
            </div>
          </div>
        <div class="edit-address-buttons">
          <input class="button button-black" type="submit" class="btn" onclick="location.href='/account';" value="{{ 'customer.addresses.add' | t }}">

        {% endform %}

        <button id="btn-cancel-new-address" class="button button-white">{{ 'customer.addresses.cancel' | t }}</button>
        </div>
      </div> 
    </div>

  </div>
</section>


<script>
  // Show/hide new address form
  var newAddressTrigger = document.getElementById('btn-add-new-address');
  var newAddressForm = document.getElementById('NewAddressForm');
  var newAddressBtnCancel = document.getElementById('btn-cancel-new-address');

  newAddressTrigger.addEventListener('click', function(event) {
    newAddressForm.classList.toggle('hidden');
  });

  newAddressBtnCancel.addEventListener('click', function(event) {
    newAddressForm.classList.toggle('hidden');
  });

  // Show message when deleting an address 
  var deleteAddressButtons = document.querySelectorAll('.addressCard_delete');
  var deleteAddressButtonsLength = deleteAddressButtons.length;
  var deleteMessage = '{{ 'customer.addresses.delete_confirm' | t }}';

  for (i = 0; i < deleteAddressButtons.length; i++) {
    var deleteBtn = deleteAddressButtons[i];

    deleteBtn.addEventListener('submit', function(event) {
      var confirmMessage = event.target.getAttribute('data-confirm-message');

      if (!window.confirm(confirmMessage || deleteMessage) ) {
        event.preventDefault();
      }
    });
  }
</script>
